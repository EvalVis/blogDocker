version: "3.9"
services:
    blog:
        container_name: blog
        build:
            context: ../monolith
            dockerfile: Dockerfile
        ports:
        - "8080:8080"
        depends_on:
        - mongodb
        - postgres_blog
        environment:
            google_client_id: ${google_client_id}
            google_client_secret: ${google_client_secret}
            SPRING_PROFILES_ACTIVE: docker
            
    post:
        container_name: post
        build:
            context: ../post
            dockerfile: Dockerfile
        ports:
        - "8081:8080"
        depends_on:
        - postgres
        environment:
            SPRING_PROFILES_ACTIVE: docker
            
    frontend:
        container_name: frontend
        build:
            context: ../frontend
            dockerfile: Dockerfile
        ports:
        - "3000:3000"
        volumes:
        - node_modules:/app/node_modules/
        
    postgres:
        image: postgres:15.4
        container_name: postgres
        ports:
        - "5432:5432"
        environment:
            POSTGRES_USER: posts
            POSTGRES_PASSWORD: admin
            
    postgres_blog:
        image: postgres:15.4
        container_name: postgres_blog
        ports:
        - "5433:5432"
        environment:
            POSTGRES_USER: blog
            POSTGRES_PASSWORD: admin
            POSTGRES_DB: users
            
    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin4_container
        ports:
        - "5050:80"
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com
            PGADMIN_DEFAULT_PASSWORD: admin
            
    mongodb:
        image: mongo:7.0
        container_name: mongodb
        environment:
            MONGO_INITDB_DATABASE: blog
        ports:
            - "27017:27017"
    
    elasticsearch:
        container_name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
        environment: 
            - discovery.type=single-node
            - xpack.security.enabled=false
        ports:
            - "9200:9200"
            - "9300:9300"
      
    logstash:
        container_name: logstash
        image: docker.elastic.co/logstash/logstash:7.1.1
        depends_on: 
            - elasticsearch
        ports:
            - "5044:5044"
        command: logstash -f /etc/logstash/conf.d/logstash.conf
        volumes:
            - ./logstash.conf:/etc/logstash/conf.d/logstash.conf:ro
      
    kibana:
        container_name: kibana
        image: docker.elastic.co/kibana/kibana:7.1.1
        depends_on:
            - elasticsearch
        ports: 
            - "5601:5601"
            
    prometheus:
        container_name: prometheus
        image: prom/prometheus:v2.35.0
        restart: unless-stopped
        ports:
            - "9090:9090"
        command:
            - "--config.file=/prometheus.yaml"
        volumes:
            - "./prometheus.yaml:/prometheus.yaml"
      
    grafana:
        container_name: grafana
        image: grafana/grafana-oss:8.5.2
        restart: unless-stopped
        ports:
            - "3010:3000"
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=admin
            - GF_SERVER_DOMAIN=localhost
            
volumes:
    node_modules: